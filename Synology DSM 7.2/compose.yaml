---
services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: immich_server
    hostname: ${IMMICH_SERVER_HOSTNAME}
    # user: ${UID}:${GID}
    security_opt:
      # Prevent escalation of privileges after the container is started
      # https://immich.app/docs/FAQ/#how-can-i-run-immich-as-a-non-root-user
      - no-new-privileges:true
    cap_drop:
      # Prevent access to raw network traffic
      # https://immich.app/docs/FAQ/#how-can-i-run-immich-as-a-non-root-user
      - NET_RAW
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2283/api/server/ping"]
      interval: 10s
      timeout: 2s
      retries: 5
    env_file:
      - .env
    # https://github.com/immich-app/immich/discussions/18614
    # environment:
    # NODE_EXTRA_CA_CERTS: /certs/lab03-daniel.wydler-eu.pem  
    ports:
      - ${IMMICH_SERVER_PORT}:2283
    volumes:
      - ${DSM_APP_SHARE}/photo:/data:rw
      # - /volume1/photo:/volume1/photo:ro

      # https://github.com/immich-app/immich/discussions/18614
      # - /volume1/immich/certs/:/certs:roZ

      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: on-failure:1
    depends_on:
      redis:
        condition: service_healthy
      database:
        condition: service_healthy


  redis:
    image: docker.io/valkey/valkey:8-bookworm@sha256:fea8b3e67b15729d4bb70589eb03367bab9ad1ee89c876f54327fc7c6e618571
    container_name: immich_redis
    hostname: ${REDIS_HOSTNAME}
    security_opt:
      # Prevent escalation of privileges after the container is started
      # https://immich.app/docs/FAQ/#how-can-i-run-immich-as-a-non-root-user
      - no-new-privileges:true
    cap_drop:
      # Prevent access to raw network traffic
      # https://immich.app/docs/FAQ/#how-can-i-run-immich-as-a-non-root-user
      - NET_RAW
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
    user: ${UID}:${GID}
    environment:
      - TZ=${TZ}
    volumes:
      - ${DSM_APP_SHARE}/redis:/data:rw

      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: on-failure:1


  database:
    image: ghcr.io/immich-app/postgres:16-vectorchord0.3.0-pgvectors0.2.1
    container_name: immich_postgres
    hostname: ${DB_HOSTNAME}
    # Prevent escalation of privileges after the container is started
    # https://immich.app/docs/FAQ/#how-can-i-run-immich-as-a-non-root-user
    security_opt:
      - no-new-privileges:true
    cap_drop:
      # Prevent access to raw network traffic
      # https://immich.app/docs/FAQ/#how-can-i-run-immich-as-a-non-root-user
      - NET_RAW
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE_NAME}", "-U", "${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ${DSM_APP_SHARE}/postgresql:/var/lib/postgresql/data:rw

      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=${TZ}
      - POSTGRES_DB=${DB_DATABASE_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS='--data-checksums'
    shm_size: 128mb
    restart: on-failure:1


  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    container_name: immich_machine_learning
    hostname: ${IMMICH_ML_HOSTNAME}
    # user: ${UID}:${GID}
    security_opt:
      # Prevent escalation of privileges after the container is started
      # https://immich.app/docs/FAQ/#how-can-i-run-immich-as-a-non-root-user
      - no-new-privileges:true
    cap_drop:
      # Prevent access to raw network traffic
      # https://immich.app/docs/FAQ/#how-can-i-run-immich-as-a-non-root-user
      - NET_RAW
    ports:
      - ${IMMICH_ML_PORT}:3003
    volumes:
      - ${DSM_APP_SHARE}/cache:/cache:rw

      # https://github.com/immich-app/immich/issues/3821
      - ${DSM_APP_SHARE}/matplotlib:/matplotlib:rw

      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - MPLCONFIGDIR=${IMMICH_ML_MPLCONFIGDIR}
    restart: on-failure:1
    depends_on:
      database:
        condition: service_started


  # immich-folder-album-creator:
    # container_name: immich_folder_album_creator
    # image: salvoxia/immich-folder-album-creator:latest
    # security_opt:
      # Prevent escalation of privileges after the container is started
      # https://immich.app/docs/FAQ/#how-can-i-run-immich-as-a-non-root-user
      # - no-new-privileges:true
    # cap_drop:
      # Prevent access to raw network traffic
      # https://immich.app/docs/FAQ/#how-can-i-run-immich-as-a-non-root-user
      # - NET_RAW
    # restart: unless-stopped
    # environment:
      # API_URL: http://${IMMICH_SERVER_HOSTNAME}:${IMMICH_SERVER_PORT}/api
      # API_KEY: ${IMMICH_API_KEY}
      # ROOT_PATH: /volume1/photo
      # ALBUM_LEVELS: "1,3"
      # CRON_EXPRESSION: "*/5 * * * *"
      # RUN_IMMEDIATELY: true
      # TZ: ${TZ}
    # depends_on:
      # immich-server:
        # condition: service_healthy


networks:
  default:
    name: immich-app_default
    external: true
